// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snap shot testings renders mixed 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          id="GrandParent"
        >
          <div>
            My Path is : root1.GrandParent
          </div>
          <div>
            <div
              id="Parent"
            >
              <div>
                My Path is : root1.GrandParent.Parent / My id is : Parent
              </div>
              <div>
                <div
                  id="GrandParent"
                >
                  <div>
                    My Path is : root2.GrandParent
                  </div>
                  <div>
                    <div
                      id="Me"
                    >
                      <div>
                        My Path is : root1.GrandParent.Parent.Me
                      </div>
                      <div>
                        <div
                          id="Parent"
                        >
                          <div>
                            My Path is : root2.GrandParent.Parent / My id is : Parent
                          </div>
                          <div>
                            <div
                              id="Me"
                            >
                              <div>
                                My Path is : root2.GrandParent.Parent.Me
                              </div>
                              <div>
                                <div
                                  id="Child"
                                >
                                  <div>
                                    My Path is : root1.GrandParent.Parent.Me.Child / My id is : Child
                                  </div>
                                  <div>
                                    <div
                                      id="GrandChild"
                                    >
                                      <div>
                                        My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                                      </div>
                                      <div />
                                    </div>
                                    <div
                                      id="Child"
                                    >
                                      <div>
                                        My Path is : root2.GrandParent.Parent.Me.Child / My id is : Child
                                      </div>
                                      <div>
                                        <div
                                          id="GrandChild"
                                        >
                                          <div>
                                            My Path is : root2.GrandParent.Parent.Me.Child.GrandChild
                                          </div>
                                          <div />
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        id="GrandParent"
      >
        <div>
          My Path is : root1.GrandParent
        </div>
        <div>
          <div
            id="Parent"
          >
            <div>
              My Path is : root1.GrandParent.Parent / My id is : Parent
            </div>
            <div>
              <div
                id="GrandParent"
              >
                <div>
                  My Path is : root2.GrandParent
                </div>
                <div>
                  <div
                    id="Me"
                  >
                    <div>
                      My Path is : root1.GrandParent.Parent.Me
                    </div>
                    <div>
                      <div
                        id="Parent"
                      >
                        <div>
                          My Path is : root2.GrandParent.Parent / My id is : Parent
                        </div>
                        <div>
                          <div
                            id="Me"
                          >
                            <div>
                              My Path is : root2.GrandParent.Parent.Me
                            </div>
                            <div>
                              <div
                                id="Child"
                              >
                                <div>
                                  My Path is : root1.GrandParent.Parent.Me.Child / My id is : Child
                                </div>
                                <div>
                                  <div
                                    id="GrandChild"
                                  >
                                    <div>
                                      My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                                    </div>
                                    <div />
                                  </div>
                                  <div
                                    id="Child"
                                  >
                                    <div>
                                      My Path is : root2.GrandParent.Parent.Me.Child / My id is : Child
                                    </div>
                                    <div>
                                      <div
                                        id="GrandChild"
                                      >
                                        <div>
                                          My Path is : root2.GrandParent.Parent.Me.Child.GrandChild
                                        </div>
                                        <div />
                                      </div>
                                    </div>
                                  </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`snap shot testings renders one root,one component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          id="GrandParent"
        >
          <div>
            My Path is : root1.GrandParent
          </div>
          <div>
            <div
              id="Parent"
            >
              <div>
                My Path is : root1.GrandParent.Parent
              </div>
              <div>
                <div
                  id="Me"
                >
                  <div>
                    My Path is : root1.GrandParent.Parent.Me
                  </div>
                  <div>
                    <div
                      id="Child"
                    >
                      <div>
                        My Path is : root1.GrandParent.Parent.Me.Child
                      </div>
                      <div>
                        <div
                          id="GrandChild"
                        >
                          <div>
                            My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                          </div>
                          <div />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        id="GrandParent"
      >
        <div>
          My Path is : root1.GrandParent
        </div>
        <div>
          <div
            id="Parent"
          >
            <div>
              My Path is : root1.GrandParent.Parent
            </div>
            <div>
              <div
                id="Me"
              >
                <div>
                  My Path is : root1.GrandParent.Parent.Me
                </div>
                <div>
                  <div
                    id="Child"
                  >
                    <div>
                      My Path is : root1.GrandParent.Parent.Me.Child
                    </div>
                    <div>
                      <div
                        id="GrandChild"
                      >
                        <div>
                          My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                        </div>
                        <div />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`snap shot testings renders one root,two component 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <div
          id="GrandParent"
        >
          <div>
            My Path is : root1.GrandParent
          </div>
          <div>
            <div
              id="Parent"
            >
              <div>
                My Path is : root1.GrandParent.Parent / My id is : Parent
              </div>
              <div>
                <div
                  id="Me"
                >
                  <div>
                    My Path is : root1.GrandParent.Parent.Me
                  </div>
                  <div>
                    <div
                      id="Child"
                    >
                      <div>
                        My Path is : root1.GrandParent.Parent.Me.Child / My id is : Child
                      </div>
                      <div>
                        <div
                          id="GrandChild"
                        >
                          <div>
                            My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                          </div>
                          <div />
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <div
        id="GrandParent"
      >
        <div>
          My Path is : root1.GrandParent
        </div>
        <div>
          <div
            id="Parent"
          >
            <div>
              My Path is : root1.GrandParent.Parent / My id is : Parent
            </div>
            <div>
              <div
                id="Me"
              >
                <div>
                  My Path is : root1.GrandParent.Parent.Me
                </div>
                <div>
                  <div
                    id="Child"
                  >
                    <div>
                      My Path is : root1.GrandParent.Parent.Me.Child / My id is : Child
                    </div>
                    <div>
                      <div
                        id="GrandChild"
                      >
                        <div>
                          My Path is : root1.GrandParent.Parent.Me.Child.GrandChild
                        </div>
                        <div />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
